{"version":3,"file":"config.js","mappings":"AAAAA,OAAOC,aAEP,SAAWC,EAAGC,GACZ,aAEA,MAAMC,EAAYC,SAASC,eAAe,iBACpCC,EAAiB,GAGjBC,EAAOC,QAAQC,OAAOC,IAAIC,UAAUT,GAGpCU,EAAW,CAACC,EAAKC,EAAUC,IAC3BF,EAAIG,eAAeF,GACdD,EAAIC,GAENC,EAGHE,EAAyBL,EAASL,EAAM,yBAA0B,IAClEW,EAAsBN,EAASL,EAAM,sBAAuB,IAG5DY,EAAuBP,EAASL,EAAM,uBAAwB,MAC9Da,EAAQC,KAAKC,MAAMH,GACzB,QAA4BI,IAAzBJ,EACD,IAAI,MAAMK,KAAOrB,EAAUgB,qBACzBK,EAAIC,QAAUD,EAAIE,MAAMN,EAK5BjB,EAAUwB,kBAAkBC,MAAQhB,EAASL,EAAM,oBAAqB,QAGxEJ,EAAU0B,qBAAqBD,MAAQhB,EAASL,EAAM,uBAAwB,IAG9EC,QAAQsB,IAAItB,QAAQsB,IAAIC,IAAI,yBAAyB,GAAO,MAAO,CACjErB,IAAKF,QAAQE,IAAIsB,UAChB,SAASC,GACV,IAAK,MAAMC,KAAOD,EAAKE,WAAY,CAC/B,IAAKF,EAAKE,WAAWnB,eAAekB,GAAO,SAC3C,MACME,EAAOH,EAAKE,WAAWD,GACvBG,EAAQD,EAAKC,MACbC,EAAOF,EAAKE,KACA,SAAdF,EAAKG,OACLjC,EAAe8B,EAAKC,OAASD,EAAKE,KAE9BD,IAAUpB,GACVhB,EAAE,2BAA2BuC,QAAQ,gBAAkBF,EAAO,aAAeD,EAAQ,aACrFpC,EAAE,wBAAwBwC,OAAO,gBAAkBH,EAAO,IAAMD,EAAQ,cACjEA,IAAUnB,GACjBjB,EAAE,2BAA2BwC,OAAO,gBAAkBH,EAAO,IAAMD,EAAQ,aAC3EpC,EAAE,wBAAwBuC,QAAQ,gBAAkBF,EAAO,aAAeD,EAAQ,eAElFpC,EAAE,2BAA2BwC,OAAO,gBAAkBH,EAAO,IAAMD,EAAQ,aAC3EpC,EAAE,wBAAwBwC,OAAO,gBAAkBH,EAAO,IAAMD,EAAQ,mBAQtF,MAAMK,EAAQzC,EAAE,uBACV0C,EAAgB1C,EAAE,qBAGxByC,EAAME,GAAG,UAAU,SAASC,GAC1B,MAAMC,EAAU,GAGV3C,EAAYC,SAASC,eAAe,iBAGpC0C,EAAgB5C,EAAUgB,qBAC1B6B,EAAa,GACnB,IAAI,MAAMC,KAAQF,GACI,IAAjBE,EAAKxB,UACNuB,EAAWC,EAAKvB,IAAMuB,EAAKrB,OAG/BkB,EAAO,qBAA2BzB,KAAK6B,UAAUF,GACjDF,EAAO,kBAAwB3C,EAAUwB,kBAAkBC,MAE3DkB,EAAO,sBAA4BxC,EAAeH,EAAUc,uBAAuBW,OACnFkB,EAAO,uBAA6B3C,EAAUc,uBAAuBW,MACrEkB,EAAO,mBAAyBxC,EAAeH,EAAUe,oBAAoBU,OAC7EkB,EAAO,oBAA0B3C,EAAUe,oBAAoBU,MAE/DkB,EAAO,qBAA2B3C,EAAU0B,qBAAqBD,MAEjEiB,EAAEM,iBACF3C,QAAQC,OAAOC,IAAI0C,UAAUN,GAAS,WACpCO,MAAM,gCACNC,OAAOC,SAASC,KAAO,kBAAoBhD,QAAQE,IAAIsB,cAI3DW,EAAcC,GAAG,SAAS,WACxBU,OAAOC,SAASC,KAAO,SAAWhD,QAAQE,IAAIsB,QAAU,cApG5D,CAuGGjC,OAAQS,QAAQiD","sources":["webpack://bokinchan_bbk_plugin/./src/js/config.js"],"sourcesContent":["jQuery.noConflict();\n\n(function ($, PLUGIN_ID) {\n  'use strict';\n\n  const form_node = document.getElementById('form_settings');\n  const formparts_date = {};\n\n  // 変換ルールの設定をチェックボックスに反映\n  const CONF = kintone.plugin.app.getConfig(PLUGIN_ID);\n\n  // 設定値またはデフォルト値を取得\n  const get_from = (dic, conf_key, defaults) => {\n    if( dic.hasOwnProperty(conf_key) ){\n      return dic[conf_key]\n    }\n    return defaults\n  }\n  \n  const fc_date_register_label = get_from(CONF, 'fc_date_register_label', '');\n  const fc_date_limit_label = get_from(CONF, 'fc_date_limit_label', '')\n\n  // 変換ルール選択チェックボックスの反映\n  const rule_date_converting = get_from(CONF, 'rule_date_converting', '{}');\n  const rules = JSON.parse(rule_date_converting);\n  if(rule_date_converting !== undefined){\n    for(const box of form_node.rule_date_converting){\n      box.checked = box.id in rules\n    }\n  }\n\n  // 週末ルール選択ラジオボタンの反映\n  form_node.rule_skip_weekend.value = get_from(CONF, 'rule_skip_weekend', 'keep');  // forward, keep, postpone\n\n  // 上限値\n  form_node.number_limit_records.value = get_from(CONF, 'number_limit_records', \"\")\n\n\n  kintone.api(kintone.api.url('/k/v1/app/form/fields', true), 'GET', {  // フォーム情報を取得\n    app: kintone.app.getId()\n  }, function(resp) {\n    for (const key in resp.properties) {\n        if (!resp.properties.hasOwnProperty(key)) {continue;}\n        const confFlg = false;\n        const prop = resp.properties[key];\n        const label = prop.label;\n        const code = prop.code;\n        if (prop.type === 'DATE') {\n            formparts_date[prop.label] = prop.code  // DATE形式のフォーム部品の辞書を構築\n\n            if (label === fc_date_register_label) {\n                $('#fc_date_register_label').prepend('<option name=' + code + ' selected>' + label + '</option>');\n                $('#fc_date_limit_label').append('<option name=' + code + '>' + label + '</option>');\n            } else if (label === fc_date_limit_label) {\n                $('#fc_date_register_label').append('<option name=' + code + '>' + label + '</option>');\n                $('#fc_date_limit_label').prepend('<option name=' + code + ' selected>' + label + '</option>');\n            } else {\n                $('#fc_date_register_label').append('<option name=' + code + '>' + label + '</option>');\n                $('#fc_date_limit_label').append('<option name=' + code + '>' + label + '</option>');\n            }\n        }\n    }\n  });\n\n\n  \n  const $form = $('.js-submit-settings');\n  const $cancelButton = $('.js-cancel-button');\n\n  // submitイベント\n  $form.on('submit', function(e) {\n    const updated = {};\n\n    // 設定値の取得\n    const form_node = document.getElementById('form_settings');\n\n    // 採用する変換ルールについて保存\n    const checked_rules = form_node.rule_date_converting;\n    const save_rules = {}  // {'当日': 'current_day'}\n    for(const rule of checked_rules){\n      if(rule.checked === true){\n        save_rules[rule.id] = rule.value\n      }\n    }\n    updated['rule_date_converting'] = JSON.stringify(save_rules);\n    updated['rule_skip_weekend'] = form_node.rule_skip_weekend.value  // 週末スキップルール, forward, keep, postpone\n\n    updated['fc_date_register_code'] = formparts_date[form_node.fc_date_register_label.value]\n    updated['fc_date_register_label'] = form_node.fc_date_register_label.value\n    updated['fc_date_limit_code'] = formparts_date[form_node.fc_date_limit_label.value]\n    updated['fc_date_limit_label'] = form_node.fc_date_limit_label.value\n\n    updated['number_limit_records'] = form_node.number_limit_records.value\n    \n    e.preventDefault();\n    kintone.plugin.app.setConfig(updated, function () {\n      alert('プラグイン設定を保存しました。アプリの更新をお忘れなく！');\n      window.location.href = '../../flow?app=' + kintone.app.getId();\n    });\n  });\n\n  $cancelButton.on('click', function () {\n    window.location.href = '../../' + kintone.app.getId() + '/plugin/';\n  });\n\n})(jQuery, kintone.$PLUGIN_ID);\n"],"names":["jQuery","noConflict","$","PLUGIN_ID","form_node","document","getElementById","formparts_date","CONF","kintone","plugin","app","getConfig","get_from","dic","conf_key","defaults","hasOwnProperty","fc_date_register_label","fc_date_limit_label","rule_date_converting","rules","JSON","parse","undefined","box","checked","id","rule_skip_weekend","value","number_limit_records","api","url","getId","resp","key","properties","prop","label","code","type","prepend","append","$form","$cancelButton","on","e","updated","checked_rules","save_rules","rule","stringify","preventDefault","setConfig","alert","window","location","href","$PLUGIN_ID"],"sourceRoot":""}